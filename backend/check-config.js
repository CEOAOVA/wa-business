#!/usr/bin/env node

/**
 * Script de verificaci√≥n de configuraci√≥n para WhatsApp Business Platform
 * Verifica que todas las variables de entorno est√©n correctamente configuradas
 */

const fs = require('fs');
const path = require('path');

console.log('üîç Verificando configuraci√≥n de WhatsApp Business Platform...\n');

// Verificar archivo .env
const envPath = path.join(__dirname, '.env');
const envLocalPath = path.join(__dirname, 'env.local');

let envContent = '';
if (fs.existsSync(envPath)) {
  envContent = fs.readFileSync(envPath, 'utf8');
} else if (fs.existsSync(envLocalPath)) {
  envContent = fs.readFileSync(envLocalPath, 'utf8');
} else {
  console.log('‚ùå No se encontr√≥ archivo .env o env.local');
  process.exit(1);
}

// Variables cr√≠ticas para verificar
const criticalVars = {
  'NODE_ENV': 'development|production',
  'PORT': '3002',
  'VITE_BACKEND_URL': 'https://dev-apiwaprueba.aova.mx',
  'CORS_ORIGINS': 'https://dev-waprueba.aova.mx',
  'SUPABASE_URL': 'https://',
  'SUPABASE_ANON_KEY': 'eyJ',
  'SUPABASE_SERVICE_ROLE_KEY': 'eyJ',
  'JWT_SECRET': 'tu_jwt_secret',
  'WHATSAPP_ACCESS_TOKEN': 'EAA',
  'WHATSAPP_PHONE_NUMBER_ID': '74',
  'OPEN_ROUTER_API_KEY': 'sk-or-v1-'
};

console.log('üìã Variables de entorno cr√≠ticas:\n');

let allGood = true;

for (const [varName, expectedValue] of Object.entries(criticalVars)) {
  const regex = new RegExp(`^${varName}=(.+)$`, 'm');
  const match = envContent.match(regex);
  
  if (match) {
    const value = match[1].trim();
    if (value.includes(expectedValue) || value !== expectedValue) {
      console.log(`‚úÖ ${varName}: ${value.substring(0, 20)}...`);
    } else {
      console.log(`‚ö†Ô∏è  ${varName}: ${value} (esperado: ${expectedValue})`);
      allGood = false;
    }
  } else {
    console.log(`‚ùå ${varName}: NO CONFIGURADA`);
    allGood = false;
  }
}

console.log('\nüîß Verificando configuraci√≥n de CSP...\n');

// Verificar configuraci√≥n de seguridad
const securityPath = path.join(__dirname, 'src', 'middleware', 'security.ts');
if (fs.existsSync(securityPath)) {
  const securityContent = fs.readFileSync(securityPath, 'utf8');
  
  // Verificar que el frontend est√© en connectSrc
  if (securityContent.includes('https://dev-waprueba.aova.mx')) {
    console.log('‚úÖ CSP backend: Frontend permitido en connectSrc');
  } else {
    console.log('‚ùå CSP backend: Frontend NO est√° en connectSrc');
    allGood = false;
  }
} else {
  console.log('‚ö†Ô∏è  No se encontr√≥ archivo de seguridad');
}

// Verificar configuraci√≥n de Docker
const dockerPath = path.join(__dirname, '..', 'docker-compose.coolify.yml');
if (fs.existsSync(dockerPath)) {
  const dockerContent = fs.readFileSync(dockerPath, 'utf8');
  
  if (dockerContent.includes('https://dev-apiwaprueba.aova.mx')) {
    console.log('‚úÖ Docker CSP: Backend permitido en connectSrc');
  } else {
    console.log('‚ùå Docker CSP: Backend NO est√° en connectSrc');
    allGood = false;
  }
} else {
  console.log('‚ö†Ô∏è  No se encontr√≥ archivo docker-compose.coolify.yml');
}

console.log('\nüîç Verificando archivos del frontend...\n');

// Verificar archivos del frontend que podr√≠an tener localhost
const frontendFiles = [
  '../frontend/src/services/auth-api.ts',
  '../frontend/src/services/whatsapp-api.ts',
  '../frontend/src/services/chatbot-api.ts',
  '../frontend/src/services/dashboard-api.ts',
  '../frontend/src/hooks/useWebSocket.ts',
  '../frontend/src/hooks/useWebSocketImproved.ts',
  '../frontend/src/hooks/useWebSocketSimple.ts',
  '../frontend/src/utils/auth-cleanup.ts'
];

let frontendIssues = 0;

for (const filePath of frontendFiles) {
  const fullPath = path.join(__dirname, filePath);
  if (fs.existsSync(fullPath)) {
    const content = fs.readFileSync(fullPath, 'utf8');
    
    // Buscar localhost:3002
    if (content.includes('localhost:3002')) {
      console.log(`‚ùå ${filePath}: Contiene localhost:3002`);
      frontendIssues++;
    } else if (content.includes('https://dev-apiwaprueba.aova.mx')) {
      console.log(`‚úÖ ${filePath}: Configurado correctamente`);
    } else {
      console.log(`‚ö†Ô∏è  ${filePath}: No se detect√≥ configuraci√≥n espec√≠fica`);
    }
  } else {
    console.log(`‚ö†Ô∏è  ${filePath}: Archivo no encontrado`);
  }
}

if (frontendIssues > 0) {
  console.log(`\n‚ùå Se encontraron ${frontendIssues} archivos con localhost:3002`);
  allGood = false;
} else {
  console.log('\n‚úÖ Todos los archivos del frontend est√°n configurados correctamente');
}

console.log('\nüìä Resumen de verificaci√≥n:');
if (allGood) {
  console.log('‚úÖ Configuraci√≥n correcta para producci√≥n');
  console.log('\nüöÄ Pr√≥ximos pasos:');
  console.log('1. Desplegar en Coolify');
  console.log('2. Verificar que VITE_BACKEND_URL=https://dev-apiwaprueba.aova.mx');
  console.log('3. Probar login en https://dev-waprueba.aova.mx');
} else {
  console.log('‚ùå Hay problemas en la configuraci√≥n');
  console.log('\nüîß Soluciones:');
  console.log('1. Verificar variables de entorno en Coolify');
  console.log('2. Asegurar que VITE_BACKEND_URL use HTTPS');
  console.log('3. Verificar configuraci√≥n de CSP');
  console.log('4. Revisar logs de la aplicaci√≥n');
  console.log('5. Ejecutar: git add . && git commit -m "Fix CSP localhost URLs" && git push');
}

console.log('\nüìù Para m√°s informaci√≥n, consulta:');
console.log('- DEPLOY_GUIDE.md');
console.log('- PRODUCTION_ENV_TEMPLATE.md');
console.log('- DOCUMENTATION.md');
console.log('- CSP_FIX_GUIDE.md'); 